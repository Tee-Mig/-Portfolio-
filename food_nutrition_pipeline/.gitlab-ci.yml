stages:
  - build
  - test
  - push
  - deploy

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build -t "$IMAGE_TAG" .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

test:
  stage: test
  image: python:3.12-slim
  before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - pytest tests/
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

push-image:
  stage: push
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker push "$IMAGE_TAG"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy:
  stage: deploy
  image: alpine:3.22.1
  before_script:
    - apk update && apk upgrade
    - apk add --no-cache openssh
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - chmod 400 id_rsa
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  script:
    - ssh -i id_rsa "$SSH_USER@$SSH_HOST" "
      apt install -y docker.io
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD "$CI_REGISTRY" &&
      docker pull $IMAGE_TAG &&
      docker stop food_nutrition_pipeline || true &&
      docker rm food_nutrition_pipeline || true &&
      docker run -d --restart always --name food_nutrition_pipeline -p 80:80 $IMAGE_TAG
      "
  after_script:
    - rm -f id_rsa
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
